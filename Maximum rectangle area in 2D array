#include <bits/stdc++.h>
using namespace std;
int findMaxSubArraySum(int arr[10], int rows, int&top, int&bottom)
{
	int maxSum = INT_MIN, sum = 0, start, finish = -1;
	for(int i = 0; i<rows; i++)
	{
		sum+=arr[i];
		if(sum<0)
		{
			sum = 0;
			start = i+1;
		}
		else
		{
			maxSum = sum;
			top = start;
			bottom = i;
			finish = i;
		}
	}
	if(finish>0)
	   return maxSum;
	maxSum = arr[0];
	for(int i = 0; i<rows; i++)
	  if(arr[i]>maxSum)
	  {
	  	 top = i;
	  	 bottom = i;
	  	 maxSum = arr[i];
	  }
	return maxSum;
}
int maximumAreaRectangle(int matrix[10][10], int rows, int columns)
{
	int subArraySum[rows];
	int left = 0, right = 0, maxArea = INT_MIN, ansLeft = 0, ansRight = 0, ansTop = 0, ansBottom = 0;
	int top, bottom, sum;
	while(left<columns)
	{
		right = left;
		for(int i = 0; i<rows; i++)
		  subArraySum[i] = 0;
		while(right<columns)
		{
			for(int  i =0; i<rows; i++)
			  subArraySum[i]+=matrix[i][right];
			sum = findMaxSubArraySum(subArraySum, rows, top, bottom);
			if(sum>=maxArea)
			{
				maxArea = sum;
				ansLeft = left;
				ansRight = right;
				ansTop = top;
				ansBottom = bottom;
			}
			right++;
		}
	    left++;
	}
	cout<<"Indices : ("<<ansTop<<","<<ansLeft<<") ("<<ansBottom<<","<<ansRight<<")\n";
    return maxArea;
}
int main() {
	// your code goes here
	int matrix[10][10] = {{1, 2, -1, -4, -20},  
                         {-8, -3, 4, 2, 1},  
                         {3, 8, 10, 1, 3},  
                         {-4, -1, 1, 7, -6}};
	int n = maximumAreaRectangle(matrix, 4, 5);
	cout<<n;
	return 0;
}
